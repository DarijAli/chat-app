{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/React/chat-app/client/src/components/chat/Chats.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Input } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport UserIcon from \"../../assets/images/User.svg\";\nimport SendButton from \"../../assets/images/SendButton.svg\";\nimport EmojiButton from \"../../assets/images/EmojiButton.svg\";\nimport Picker from \"emoji-picker-react\";\nimport { useComponentVisible } from \"../../hooks/CustomHooks\";\nimport UploadClip from \"../../assets/images/UploadClip.svg\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\n\nconst Chats = _ref => {\n  _s();\n\n  let {\n    socket,\n    userName,\n    room\n  } = _ref;\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n  const {\n    ref,\n    isComponentVisible,\n    setIsComponentVisible\n  } = useComponentVisible(false);\n  const [visible, setVisible] = useState(false);\n\n  const onEmojiClick = (e, emojiObject) => {\n    let sym = emojiObject.unified.split(\"-\");\n    let codesArray = [];\n    sym.forEach(el => codesArray.push(\"0x\" + el));\n    let emoji = String.fromCodePoint(...codesArray);\n    setCurrentMessage(currentMessage + emoji);\n  };\n\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const messageData = {\n        room: room,\n        author: userName,\n        message: currentMessage,\n        time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\n      };\n      await socket.emit(\"send_message\", messageData);\n      setMessageList(list => [...list, messageData]);\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"recieve_message\", data => {\n      setMessageList(list => [...list, data]);\n    });\n  }, [socket]);\n\n  const toggleEmojiBar = () => {\n    setIsComponentVisible(!isComponentVisible);\n  };\n\n  const handleModal = () => {\n    setVisible(!visible);\n  };\n\n  const handleInput = e => {\n    setCurrentMessage(e.target.value);\n  };\n\n  const renderChats = (messageContent, id) => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: `chat-content ${userName === messageContent.author ? \"right\" : \"left\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: UserIcon,\n        alt: \"usericon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-text-container flex-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: messageContent.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-desc\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: messageContent.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: messageContent.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chats-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chats-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chats-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: UserIcon,\n              alt: \"usericon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chats-header-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chats-header-detail\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: userName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Associate Creative Manager\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ScrollToBottom, {\n          className: \"message-body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-body\",\n            children: messageList.map((messageContent, i) => {\n              return /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: renderChats(messageContent, i)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 24\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chats-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chats-box-input\",\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              name: \"basic\",\n              initialValues: {\n                remember: true\n              },\n              autoComplete: \"off\",\n              onKeyPress: e => {\n                if (e.key === \"Enter\") {\n                  sendMessage();\n                  e.preventDefault();\n                  setCurrentMessage(\"\");\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chat-box-container\",\n                children: [/*#__PURE__*/_jsxDEV(TextArea, {\n                  size: \"large\",\n                  name: \"message\",\n                  placeholder: \"Enter your message here\",\n                  onChange: e => handleInput(e),\n                  value: currentMessage,\n                  type: \"text\",\n                  autoSize: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"chat-box-emojis-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"chats-box-input-emojis\",\n                    ref: ref,\n                    children: [isComponentVisible && /*#__PURE__*/_jsxDEV(Picker, {\n                      onEmojiClick: onEmojiClick,\n                      pickerStyle: {\n                        position: \"absolute\",\n                        top: \"-23em\",\n                        right: \"0em\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 134,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: EmojiButton,\n                      alt: \"EmojiButton\",\n                      onClick: toggleEmojiBar,\n                      width: \"30px\",\n                      height: \"30px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"chats-box-input-attachment\",\n                    onClick: handleModal,\n                    children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: UploadClip,\n                      alt: \"EmojiButton\",\n                      width: \"30px\",\n                      height: \"30px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"chats-box-input-submit\",\n                    onClick: sendMessage,\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: SendButton,\n                      alt: \"EmojiButton\",\n                      height: \"40px\",\n                      width: \"40px\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Chats, \"IzfqFMFJiT2vDMfkZtTuveCTWmk=\", false, function () {\n  return [useComponentVisible];\n});\n\n_c = Chats;\nexport default Chats;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"sources":["/Users/mac/Desktop/React/chat-app/client/src/components/chat/Chats.js"],"names":["Form","Input","React","useEffect","useState","Picker","useComponentVisible","ScrollToBottom","TextArea","Chats","socket","userName","room","currentMessage","setCurrentMessage","messageList","setMessageList","ref","isComponentVisible","setIsComponentVisible","visible","setVisible","onEmojiClick","e","emojiObject","sym","unified","split","codesArray","forEach","el","push","emoji","String","fromCodePoint","sendMessage","messageData","author","message","time","Date","now","getHours","getMinutes","emit","list","on","data","toggleEmojiBar","handleModal","handleInput","target","value","renderChats","messageContent","id","UserIcon","map","i","remember","key","preventDefault","position","top","right","EmojiButton","UploadClip","SendButton"],"mappings":"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","sourcesContent":["import { Form, Input } from \"antd\"\nimport React, { useEffect, useState } from \"react\"\nimport UserIcon from \"../../assets/images/User.svg\"\nimport SendButton from \"../../assets/images/SendButton.svg\"\nimport EmojiButton from \"../../assets/images/EmojiButton.svg\"\nimport Picker from \"emoji-picker-react\"\nimport { useComponentVisible } from \"../../hooks/CustomHooks\"\nimport UploadClip from \"../../assets/images/UploadClip.svg\"\nimport ScrollToBottom from \"react-scroll-to-bottom\"\n\nconst { TextArea } = Input\n\nconst Chats = ({ socket, userName, room }) => {\n  const [currentMessage, setCurrentMessage] = useState(\"\")\n  const [messageList, setMessageList] = useState([])\n\n  const { ref, isComponentVisible, setIsComponentVisible } =\n    useComponentVisible(false)\n\n  const [visible, setVisible] = useState(false)\n\n  const onEmojiClick = (e, emojiObject) => {\n    let sym = emojiObject.unified.split(\"-\")\n    let codesArray = []\n    sym.forEach((el) => codesArray.push(\"0x\" + el))\n    let emoji = String.fromCodePoint(...codesArray)\n\n    setCurrentMessage(currentMessage + emoji)\n  }\n\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const messageData = {\n        room: room,\n        author: userName,\n        message: currentMessage,\n        time:\n          new Date(Date.now()).getHours() +\n          \":\" +\n          new Date(Date.now()).getMinutes(),\n      }\n      await socket.emit(\"send_message\", messageData)\n      setMessageList((list) => [...list, messageData])\n    }\n  }\n\n  useEffect(() => {\n    socket.on(\"recieve_message\", (data) => {\n      setMessageList((list) => [...list, data])\n    })\n  }, [socket])\n\n  const toggleEmojiBar = () => {\n    setIsComponentVisible(!isComponentVisible)\n  }\n\n  const handleModal = () => {\n    setVisible(!visible)\n  }\n\n  const handleInput = (e) => {\n    setCurrentMessage(e.target.value)\n  }\n\n  const renderChats = (messageContent, id) => {\n    return (\n      <li\n        className={`chat-content ${\n          userName === messageContent.author ? \"right\" : \"left\"\n        }`}\n        key={id}\n      >\n        <img src={UserIcon} alt=\"usericon\" />\n        <div className=\"chat-text-container flex-1\">\n          <p>{messageContent.message}</p>\n          <div className=\"chat-desc\">\n            <p>{messageContent.time}</p>\n            <p>{messageContent.author}</p>\n          </div>\n        </div>\n      </li>\n    )\n  }\n  return (\n    <>\n      <div className=\"chats-container\">\n        <div className=\"chats-card\">\n          <div className=\"chats-header\">\n            <div>\n              <img src={UserIcon} alt=\"usericon\" />\n            </div>\n            <div className=\"chats-header-content\">\n              <div className=\"chats-header-detail\">\n                <p>{userName}</p>\n                <p>Associate Creative Manager</p>\n              </div>\n            </div>\n          </div>\n          <ScrollToBottom className=\"message-body\">\n            <div className=\"message-body\">\n              {messageList.map((messageContent, i) => {\n                return <ul>{renderChats(messageContent, i)}</ul>\n              })}\n            </div>\n          </ScrollToBottom>\n          <div className=\"chats-box\">\n            <div className=\"chats-box-input\">\n              <Form\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                autoComplete=\"off\"\n                onKeyPress={(e) => {\n                  if (e.key === \"Enter\") {\n                    sendMessage()\n                    e.preventDefault()\n\n                    setCurrentMessage(\"\")\n                  }\n                }}\n              >\n                <div className=\"chat-box-container\">\n                  <TextArea\n                    size=\"large\"\n                    name=\"message\"\n                    placeholder=\"Enter your message here\"\n                    onChange={(e) => handleInput(e)}\n                    value={currentMessage}\n                    type=\"text\"\n                    autoSize\n                  />\n                  <div className=\"chat-box-emojis-container\">\n                    <div className=\"chats-box-input-emojis\" ref={ref}>\n                      {isComponentVisible && (\n                        <Picker\n                          onEmojiClick={onEmojiClick}\n                          pickerStyle={{\n                            position: \"absolute\",\n                            top: \"-23em\",\n                            right: \"0em\",\n                          }}\n                        />\n                      )}\n                      <img\n                        src={EmojiButton}\n                        alt=\"EmojiButton\"\n                        onClick={toggleEmojiBar}\n                        width=\"30px\"\n                        height=\"30px\"\n                      />\n                    </div>\n                    <div\n                      className=\"chats-box-input-attachment\"\n                      onClick={handleModal}\n                    >\n                      {\" \"}\n                      <img\n                        src={UploadClip}\n                        alt=\"EmojiButton\"\n                        width=\"30px\"\n                        height=\"30px\"\n                      />\n                    </div>\n                    <div\n                      className=\"chats-box-input-submit\"\n                      onClick={sendMessage}\n                    >\n                      <img\n                        src={SendButton}\n                        alt=\"EmojiButton\"\n                        height=\"40px\"\n                        width=\"40px\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </Form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Chats\n"]},"metadata":{},"sourceType":"module"}